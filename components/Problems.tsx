import React from 'react';

const problems = [
  {
    pain: "–ö–ª–∏–µ–Ω—Ç –Ω–µ –¥–æ–∑–≤–æ–Ω–∏–ª—Å—è ‚Äî —É—à–µ–ª –∫ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞–º",
    solution: "myBOT —Å–∞–º –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –±—Ä–æ–Ω–∏ 24/7, –±–µ–∑ –∑–≤–æ–Ω–∫–æ–≤ –∏ –ø–æ—Ç–µ—Ä–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤"
  },
  {
    pain: "–õ—é–¥–∏ –±—Ä–æ–Ω–∏—Ä—É—Ç –Ω–æ –Ω–µ –ø—Ä–∏—Ö–æ–¥—è—Ç ‚Äî –¥–µ–Ω—å –ø—É—Å—Ç—É–µ—Ç",
    solution: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø—Ä—è–º–æ –≤ Telegram"
  },
  {
    pain: "–ù–µ –ø–æ–Ω–∏–º–∞–µ—Ç–µ, —Å–∫–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω–æ –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏",
    solution: "myBOT —Å—á–∏—Ç–∞–µ—Ç –≤—Å—ë —Å–∞–º: –ø–æ –¥–∞—Ç–∞–º, –±–µ—Å–µ–¥–∫–∞–º, —É—Å–ª—É–≥–∞–º –∏ –≥–æ—Å—Ç—è–º"
  },
  {
    pain: "–ü—É—Ç–∞–µ—Ç–µ—Å—å –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏, –¥–≤–æ–π–Ω—ã–µ –±—Ä–æ–Ω–∏",
    solution: "myBOT —Å–≤–µ—Ä—è–µ—Ç –∑–∞–Ω—è—Ç–æ—Å—Ç—å –∏ –Ω–µ –¥–∞—Å—Ç –∑–∞–ø–∏—Å–∞—Ç—å –Ω–∞ —Ç–æ –∂–µ –≤—Ä–µ–º—è"
  },
  {
    pain: "–í–∞—à –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤ –ø–ª–æ—Ö–æ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–∏ –º–æ–∂–µ—Ç –∏—Å–ø–æ—Ä—Ç–∏—Ç—å –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ –æ—Ç –≤—Å–µ–≥–æ –æ—Ç–¥—ã—Ö–∞",
    solution: "myBOT –≤—Å–µ–≥–¥–∞ –≤–µ–∂–ª–∏–≤ –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç–µ–ª–µ–Ω. –ö–∞–∂–¥—ã–π –≥–æ—Å—Ç—å –ø–æ–ª—É—á–∞–µ—Ç –æ–¥–∏–Ω–∞–∫–æ–≤–æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å 24/7."
  },
  {
    pain: "–ñ–∏–≤–æ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∑–∞–±—ã–≤–∞–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≥–æ—Å—Ç—é –±–∞–Ω—é, –º–∞–Ω–≥–∞–ª –∏–ª–∏ –∑–∞–≤—Ç—Ä–∞–∫, —Ç–µ—Ä—è—è –≤–∞–º –¥–µ–Ω—å–≥–∏",
    solution: "myBOT –≤—Å–µ–≥–¥–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—Å–µ –¥–æ–ø—É—Å–ª—É–≥–∏ –≤ –º–æ–º–µ–Ω—Ç –±—Ä–æ–Ω–∏. –ù–∏ –æ–¥–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–µ –±—É–¥–µ—Ç —É–ø—É—â–µ–Ω–∞."
  }
];

const ProblemCard: React.FC<{ pain: string; solution: string; index: number }> = ({ pain, solution, index }) => (
  <div 
    className="bg-gray-800/50 border border-white/10 rounded-xl p-6 transform transition-all duration-500 hover:scale-105 hover:bg-white/5 hover:backdrop-blur-md hover:shadow-2xl hover:shadow-primary/20"
    style={{ animation: `slideUp 0.5s ease-out ${index * 0.1}s both` }}
  >
    <h3 className="text-xl font-bold mb-3 flex items-start">
      <span className="text-2xl mr-3">üò©</span>
      <span className="text-gray-300">{pain}</span>
    </h3>
    <p className="text-lg text-primary flex items-start">
      <span className="text-2xl mr-3">üí°</span>
      <span>
        {solution.startsWith('myBOT') ? (
          <>
            <span className="font-poiret-one">myBOT</span>
            {solution.substring(5)}
          </>
        ) : (
          solution
        )}
      </span>
    </p>
  </div>
);

const Problems: React.FC = () => {
  return (
    <section className="py-20 sm:py-24">
      <div className="container mx-auto px-6">
        <div className="text-center mb-12">
          <h2 className="text-4xl font-extrabold tracking-tight">–ó–Ω–∞–∫–æ–º—ã–µ –ø—Ä–æ–±–ª–µ–º—ã?</h2>
          <p className="mt-4 text-lg text-gray-400">–í–∞—à –±–∏–∑–Ω–µ—Å –∑–∞—Å–ª—É–∂–∏–≤–∞–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∫–∞–∫ —á–∞—Å—ã.</p>
        </div>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {problems.map((p, i) => (
            <ProblemCard key={i} pain={p.pain} solution={p.solution} index={i} />
          ))}
        </div>
      </div>
    </section>
  );
};

export default React.memo(Problems);